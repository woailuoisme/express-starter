const ErrorResponse = require('../utils/ErrorResponse');
const asyncHandler = require('../middleware/async');
const {modelCapitalize} = require('../models/{modelCapitalize}');
/**
 * @desc   Get all {model}
 * @route  GET /api/v1/{modelPluralize}
 * @access Public
 */
const index = asyncHandler(async (req, res, next) => {
	const {modelPluralize} = await {modelCapitalize}.find();
	res.status(200).json({success: true,count: {modelPluralize}.length,data: {modelPluralize}});
});
/**
 * @desc   Create single {modelPluralize}
 * @route  POST /api/v1/{modelPluralize}
 * @access Public
 */
const create = asyncHandler(async (req, res, next) => {
	const {model} = await {modelCapitalize}.create(req.body);
	res.status(201).json({success: true,data: {model}});
});

/**
 * @desc   Get single {model}
 * @route  GET /api/v1/{modelPluralize}/:id
 * @access Public
 */
const show = asyncHandler(async (req, res, next) => {
	const {model} = await {modelCapitalize}.findById(req.params.id);
	if (!{model}) return next(new ErrorResponse(`{modelCapitalize} not found with id of ${req.params.id}`, 404));
	res.status(200).json({success: true,data: {model}});
});

/**
 * @desc   Update single {model}
 * @route  PUT /api/v1/{modelPluralize}/:id
 * @access private
 */
const update = asyncHandler(async (req, res, next) => {
	const {model} = await {modelCapitalize}.findByIdAndUpdate(req.params.id, req.body, {
		new: true,
		runValidators: true,
		context: 'query' //mongoose-unique-validator docs
	});
	if (!{model}) return next(new ErrorResponse(`{modelCapitalize} not found with id of ${req.params.id}`, 404));
	res.status(200).json({ success: true, data: {model} });
});

/**
 * @desc   Delete single {model}
 * @route  Delete /api/v1/{modelPluralize}/:id
 * @access Private
 */
const destroy = asyncHandler(async (req, res, next) => {
	const {model} = await {modelCapitalize}.findByIdAndDelete(req.params.id);
	if (!{model}) return next(new ErrorResponse(`{modelCapitalize} not found with id of ${req.params.id}`, 404));

	res.status(200).json({
		success: true,
		data: {model},
		msg: `delete single {model} ${req.params.id}`
	});
});

module.exports = {modelCapitalize}Controller = {
	index,
	show,
	create,
	update,
	destroy
};
